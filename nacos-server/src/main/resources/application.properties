spring.shardingsphere.datasource.names=ds0,ds1,ds2

spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/ds0?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123
spring.shardingsphere.datasource.ds0.hikari.minimum-idle=5
spring.shardingsphere.datasource.ds0.hikari.maximum-pool-size=15
spring.shardingsphere.datasource.ds0.hikari.auto-commit=true
spring.shardingsphere.datasource.ds0.hikari.login-timeout=500
spring.shardingsphere.datasource.ds0.hikari.idle-timeout=600
spring.shardingsphere.datasource.ds0.hikari.pool-name=Tata-HikariCP
spring.shardingsphere.datasource.ds0.hikari.validation-timeout=3000
spring.shardingsphere.datasource.ds0.hikari.max-lifetime=120000
spring.shardingsphere.datasource.ds0.hikari.connection-timeout=60000
spring.shardingsphere.datasource.ds0.hikari.connection-test-query=select 1 from dual

spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/ds1?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=123
spring.shardingsphere.datasource.ds1.hikari.minimum-idle=5
spring.shardingsphere.datasource.ds1.hikari.maximum-pool-size=15
spring.shardingsphere.datasource.ds1.hikari.auto-commit=true
spring.shardingsphere.datasource.ds1.hikari.login-timeout=500
spring.shardingsphere.datasource.ds1.hikari.idle-timeout=600
spring.shardingsphere.datasource.ds1.hikari.pool-name=Tata-HikariCP
spring.shardingsphere.datasource.ds1.hikari.validation-timeout=3000
spring.shardingsphere.datasource.ds1.hikari.max-lifetime=120000
spring.shardingsphere.datasource.ds1.hikari.connection-timeout=60000
spring.shardingsphere.datasource.ds1.hikari.connection-test-query=select 1 from dual

spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds2.jdbc-url=jdbc:mysql://localhost:3306/ds2?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=123
spring.shardingsphere.datasource.ds2.hikari.minimum-idle=5
spring.shardingsphere.datasource.ds2.hikari.maximum-pool-size=15
spring.shardingsphere.datasource.ds2.hikari.auto-commit=true
spring.shardingsphere.datasource.ds2.hikari.login-timeout=500
spring.shardingsphere.datasource.ds2.hikari.idle-timeout=600
spring.shardingsphere.datasource.ds2.hikari.pool-name=Tata-HikariCP
spring.shardingsphere.datasource.ds2.hikari.validation-timeout=3000
spring.shardingsphere.datasource.ds2.hikari.max-lifetime=120000
spring.shardingsphere.datasource.ds2.hikari.connection-timeout=60000
spring.shardingsphere.datasource.ds2.hikari.connection-test-query=select 1 from dual

#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id % 3}
#广播表
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds0.t_user0,ds0.t_user1,ds1.t_user2,ds1.t_user3,ds2.t_user4,ds2.t_user5,ds0.t_product0,ds0.t_product1,ds0.t_product2,ds0.t_product_spec0,ds0.t_product_spec1,ds0.t_product_spec2,ds1.t_product3,ds1.t_product4,ds1.t_product5,ds1.t_product_spec3,ds1.t_product_spec4,ds1.t_product_spec5,ds2.t_product6,ds2.t_product7,ds2.t_product8,ds2.t_product_spec6,ds2.t_product_spec7,ds2.t_product_spec8
#ds0.t_user${0..2},ds1.t_user${3..5} ds$->{0..2}.t_user$->{0..5}  ds0.t_user0,ds0.t_user2,ds0.t_user4,ds1.t_user0,ds1.t_user3,ds1.t_user5
##分片列名称
#spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=id
##分片算法行表达式
#spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user$->{id % 6}
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.sharding-column=id
##分片算法行表达式
spring.shardingsphere.sharding.tables.t_user.table-strategy.standard.precise-algorithm-class-name=com.orarcle.server.algorithm.UserTablePreciseShardingAlgorithm

#如果要分片，必须开启广播表配置，也就是分片的表名必须相同
#分片列名称
spring.shardingsphere.sharding.tables.t_user.database-strategy.standard.sharding-column=id
#精确分片算法类名称，用于=和IN
spring.shardingsphere.sharding.tables.t_user.database-strategy.standard.precise-algorithm-class-name=com.orarcle.server.algorithm.UserDBPreciseShardingAlgorithm

spring.shardingsphere.props.sql.show=true

#用于多分片键的复合分片场景
spring.shardingsphere.sharding.tables.<logic-table-name>.database-strategy.complex.sharding-columns= #分片列名称，多个列以逗号分隔
spring.shardingsphere.sharding.tables.<logic-table-name>.database-strategy.complex.algorithm-class-name= #复合分片算法类名称。该类需实现ComplexKeysShardingAlgorithm接口并提供无参数的构造器