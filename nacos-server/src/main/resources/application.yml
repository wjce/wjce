server:
  port: 8089

spring:
  application:
    name: nacos-server
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
      username: nacos
      password: nacos
    sentinel:
      transport:
        dashboard: localhost:8080
        port: 8719

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.01:3306/wjc_test?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8
    username: root
    password: 123
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5 #连接池空闲连接的最小数量。默认10
      maximum-pool-size: 15 #连接池中允许的最大连接数。默认10；
      auto-commit: true #自动提交从池中返回的连接。默认true
      login-timeout: 500
      idle-timeout: 60000 #一个连接闲置的最大时长（毫秒）。默认10分钟
      pool-name: Tata-HikariCP #连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置
      validation-timeout: 3000 #验证连接有效性的超时时间（毫秒）
      max-lifetime: 120000 #一个连接在池中最长生命周期（毫秒），超时而且没被使用则被释放 默认30分钟。建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数
      connection-timeout: 60000 #数据库连接超时时间（毫秒）。默认30秒
      connection-test-query: select 1 from dual

  shardingsphere:
    datasource:
      names: ds0
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://127.0.01:3306/ds0?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8
        username: root
        password: 123
        hikari:
          minimum-idle: 5 #连接池空闲连接的最小数量。默认10
          maximum-pool-size: 15 #连接池中允许的最大连接数。默认10；
          auto-commit: true #自动提交从池中返回的连接。默认true
          login-timeout: 500
          idle-timeout: 60000 #一个连接闲置的最大时长（毫秒）。默认10分钟
          pool-name: Tata-HikariCP #连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置
          validation-timeout: 3000 #验证连接有效性的超时时间（毫秒）
          max-lifetime: 120000 #一个连接在池中最长生命周期（毫秒），超时而且没被使用则被释放 默认30分钟。建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数
          connection-timeout: 60000 #数据库连接超时时间（毫秒）。默认30秒
          connection-test-query: select 1 from dual
#      ds1:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        jdbc-url: jdbc:mysql://127.0.01:3306/ds1?serverTimezone=Asia/Shanghai&useSSL=false&useUnicode=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&characterEncoding=utf-8
#        username: root
#        password: 123
#        hikari:
#          minimum-idle: 5 #连接池空闲连接的最小数量。默认10
#          maximum-pool-size: 15 #连接池中允许的最大连接数。默认10；
#          auto-commit: true #自动提交从池中返回的连接。默认true
#          login-timeout: 500
#          idle-timeout: 60000 #一个连接闲置的最大时长（毫秒）。默认10分钟
#          pool-name: Tata-HikariCP #连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置
#          validation-timeout: 3000 #验证连接有效性的超时时间（毫秒）
#          max-lifetime: 120000 #一个连接在池中最长生命周期（毫秒），超时而且没被使用则被释放 默认30分钟。建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数
#          connection-timeout: 60000 #数据库连接超时时间（毫秒）。默认30秒
#          connection-test-query: select 1 from dual
    sharding:
      default-database-strategy:
        inline:
          sharding-column: id
          algorithm-expression: ds0
      tables:
        t_user:
          actual-data-nodes: ds0.t_user0,ds0.t_user1
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: t_user$->{id % 2}



management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

mybatis-plus:
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名
  type-aliases-package: com.orarcle.entity.*
  mapper-locations: classpath*:xml/*Mapper.xml
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 驼峰下划线转换
    map-underscore-to-camel-case: true
    # 配置的缓存的全局开关
    cache-enabled: true
    # 延时加载的开关
    lazy-loading-enabled: true
    # 开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
    multiple-result-sets-enabled: true
    use-generated-keys: true
    default-statement-timeout: 60
    default-fetch-size: 100

elasticJob:
  regCenter:
    serverLists: localhost:2181
    namespace: live-task

elastic-job:
  jobs:
    - jobName: testJob
      cron: '*/5 * * * * ?'